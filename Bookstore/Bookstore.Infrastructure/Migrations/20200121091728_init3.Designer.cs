// <auto-generated />
using Bookstore.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookstore.Infrastructure.Migrations
{
    [DbContext(typeof(BookstoreDbContext))]
    [Migration("20200121091728_init3")]
    partial class init3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bookstore.Core.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Elizabeth",
                            LastName = "Gilbert"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Alex",
                            LastName = "Michaelides"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jayson",
                            LastName = "Greene"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Jennifer",
                            LastName = "Weiner"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Yangsze",
                            LastName = "Choo"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Taylor",
                            LastName = "Jenkins Reid"
                        });
                });

            modelBuilder.Entity("Bookstore.Core.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 13,
                            AuthorId = 1,
                            CategoryId = 1,
                            LongDescription = "A book is a medium for recording information in the form of writing or images, typically composed of many pages (made of papyrus, parchment, vellum, or paper) bound together and protected by a cover.[1] The technical term for this physical arrangement is codex (in the plural, codices). In the history of hand-held physical supports for extended written compositions or records, the codex replaces its immediate predecessor, the scroll. A single sheet in a codex is a leaf, and each side of a leaf is a page.",
                            Name = "City of Girls",
                            Price = 100m,
                            ShortDescription = "A book is a medium for recording information in the form of writing or images",
                            Year = 1911
                        },
                        new
                        {
                            Id = 2,
                            Amount = 3,
                            AuthorId = 2,
                            CategoryId = 2,
                            LongDescription = "A book is a medium for recording information in the form of writing or images, typically composed of many pages (made of papyrus, parchment, vellum, or paper) bound together and protected by a cover.[1] The technical term for this physical arrangement is codex (in the plural, codices). In the history of hand-held physical supports for extended written compositions or records, the codex replaces its immediate predecessor, the scroll. A single sheet in a codex is a leaf, and each side of a leaf is a page.",
                            Name = "The Silent Patient",
                            Price = 400m,
                            ShortDescription = "A book is a medium for recording information in the form of writing or images",
                            Year = 1991
                        },
                        new
                        {
                            Id = 3,
                            Amount = 3,
                            AuthorId = 3,
                            CategoryId = 3,
                            LongDescription = "A book is a medium for recording information in the form of writing or images, typically composed of many pages (made of papyrus, parchment, vellum, or paper) bound together and protected by a cover.[1] The technical term for this physical arrangement is codex (in the plural, codices). In the history of hand-held physical supports for extended written compositions or records, the codex replaces its immediate predecessor, the scroll. A single sheet in a codex is a leaf, and each side of a leaf is a page.",
                            Name = "Once More We Saw Stars",
                            Price = 500m,
                            ShortDescription = "A book is a medium for recording information in the form of writing or images",
                            Year = 2005
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1,
                            AuthorId = 4,
                            CategoryId = 1,
                            LongDescription = "A book is a medium for recording information in the form of writing or images, typically composed of many pages (made of papyrus, parchment, vellum, or paper) bound together and protected by a cover.[1] The technical term for this physical arrangement is codex (in the plural, codices). In the history of hand-held physical supports for extended written compositions or records, the codex replaces its immediate predecessor, the scroll. A single sheet in a codex is a leaf, and each side of a leaf is a page.",
                            Name = "Mrs. Everything",
                            Price = 2000m,
                            ShortDescription = "A book is a medium for recording information in the form of writing or images",
                            Year = 1971
                        },
                        new
                        {
                            Id = 5,
                            Amount = 3,
                            AuthorId = 5,
                            CategoryId = 1,
                            LongDescription = "A book is a medium for recording information in the form of writing or images, typically composed of many pages (made of papyrus, parchment, vellum, or paper) bound together and protected by a cover.[1] The technical term for this physical arrangement is codex (in the plural, codices). In the history of hand-held physical supports for extended written compositions or records, the codex replaces its immediate predecessor, the scroll. A single sheet in a codex is a leaf, and each side of a leaf is a page.",
                            Name = "The Night Tiger",
                            Price = 20m,
                            ShortDescription = "A book is a medium for recording information in the form of writing or images",
                            Year = 1981
                        },
                        new
                        {
                            Id = 6,
                            Amount = 2,
                            AuthorId = 6,
                            CategoryId = 1,
                            LongDescription = "A book is a medium for recording information in the form of writing or images, typically composed of many pages (made of papyrus, parchment, vellum, or paper) bound together and protected by a cover.[1] The technical term for this physical arrangement is codex (in the plural, codices). In the history of hand-held physical supports for extended written compositions or records, the codex replaces its immediate predecessor, the scroll. A single sheet in a codex is a leaf, and each side of a leaf is a page.",
                            Name = "Daisy Jones & The Six",
                            Price = 200m,
                            ShortDescription = "A book is a medium for recording information in the form of writing or images",
                            Year = 2000
                        });
                });

            modelBuilder.Entity("Bookstore.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Novel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Memoir"
                        });
                });

            modelBuilder.Entity("Bookstore.Core.Entities.Book", b =>
                {
                    b.HasOne("Bookstore.Core.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bookstore.Core.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
